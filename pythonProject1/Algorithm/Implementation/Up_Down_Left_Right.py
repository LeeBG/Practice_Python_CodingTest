'''
    (P.110) 상하좌우 문제
    난이도 하 | 풀이시간 : 15분 | 시간 제한 | 1초 | 메모리제한 128
    
    여행가 A는 N x N 크기의 정사각형 공간 위에 서 있다.
    이공간은 1 x 1 크기의 정사각형 으로 나누어져 있다. 
    가장 왼쪽 좌표를 (1,1)이며, 가장 오른쪽 아래의 좌표는 (N,N)에 해당한다.
    여행가 A는 상,하,좌,우 방향으로 이동할 수 있으며, 시작 좌표는 항상(1,1)이다.
    우리 앞에는 여행가 A가 이동할 계획이 적힌 계획서가 놓여있다.
    
    계획서에는 하나의 줄에 띄어쓰기를 기준으로 하여 L,R,U,D 중 하나의 문자가 반복적으로
    적혀있다.
    L : 왼쪽으로 한 칸 이동
    R : 오른쪽으로 한 칸 이동
    U : 위쪽으로 한 칸 이동
    D : 아래으로 한 칸 이동
    
    이 때 여행가 A가 N x N 크기의 정사각형 공간을 벗어나는 움직임은 무시된다. 예를 들어(1,1)에서 L,U를 만나면 무시
    
    L R U D 를 list로 입력을 받아서 이동계획을 세운다.
    
'''

#전체 N 정사각형 만들기
N = int(input())
x,y = 1,1 #시작 좌표
plans = input().split() #이동계획리스트

# L, R, U, D에 따른 이동 방향 (!!! 착각 주의 x가 늘어나면 뒤(열)의 좌표가 늘어난다.(y,x++))
dx = [0,0,-1,1]
dy = [-1,1,0,0]
move_type = ['L','R','U','D']

for plan in plans:
    # 이동 후 좌표 구하기
    for i in range(len(move_type)):
        if plan == move_type[i]:
            nx = x + dx[i]
            ny = y + dy[i]
    # 공간을 벗어나는 경우 무시
    if nx < 1 or ny < 1 or nx > N or ny > N:
        continue
    # 이동 수행
    x,y = nx,ny

print(x,y)


